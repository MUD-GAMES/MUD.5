{"version":3,"sources":["webpack://SPARouter/webpack/universalModuleDefinition","webpack://SPARouter/webpack/bootstrap","webpack://SPARouter/./src/sparouter.js","webpack://SPARouter/./src/utils.js"],"names":["SPARouter","options","routes","path","_requestPath","defOptions","caseInsensitive","historyMode","mergedOptions","key","_checkHistoryMode","query","QueryParams","_historyMode","uri","callback","thisArg","Utils","isSet","ArgNotFound","isString","ArgTypeError","isFunction","undefined","route","parameters","regExp","name","current","_caseInsensitive","toLowerCase","startsWith","forEach","Error","_proccessParameters","push","length","replace","parameterFound","parameter","index","targetRoute","_proccessRegExp","found","routerObj","pathFor","_pathFor","goTo","url","data","title","_goTo","some","match","request","param","_processRequestParameters","window","location","pathname","call","_notFoundFunction","oldUrl","newUrl","isEmpty","TypeError","storage","localStorage","setItem","href","history","pushState","init","string","nameFound","_containsParameter","paramaters","isObject","array","value","Object","getOwnPropertyNames","includes","r","RegExp","sn","parameterName","obj","i","search","routeMatched","PopStateEvent","addEventListener","e","variable","prototype","toString","isUndefined","isNull","isArray","ArgumentNotFoundError","argName","message","instance","instace","setPrototypeOf","getPrototypeOf","captureStackTrace","ArgumentTypeError","argType","argValue","create","constructor","enumerable","writable","configurable","__proto__","KEYS","QUERIES","QUERY_STRING","HISTORY_MODE","DECODE","decodeURIComponent","DECODE_KEY","split","join","GET_PARAM","hasOwnProperty","event","currentTarget","queryArray","slice","has","newString","indexOf","splice"],"mappings":"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","file":"sparouter.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"SPARouter\"] = factory();\n\telse\n\t\troot[\"SPARouter\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/sparouter.js\");\n","import {\r\n    Utils,\r\n    ArgumentNotFoundError as ArgNotFound, ArgumentTypeError as ArgTypeError, QueryParams\r\n} from \"./utils.js\";\r\n\r\nclass SPARouter {\r\n\r\n     /**\r\n     * Instantiates the SPARouter Class.\r\n     * @constructor\r\n     * @param {Object} options\r\n     * @param {boolean} [options.caseInsensitive=true] - if set to false, uri matching will be case sensitive.\r\n     * @param {boolean} [options.historyMode=false] - Set to true if your application uses HTML History Mode Api.  \r\n     * If set to historyMode, SPARouter will handle popstate events by initializing the router again to update the page\r\n     * according to the callback function set with ``SPARouter.get()`` method.\r\n     * @example\r\n     * const router = new SPARouter({\r\n     * historyMode: true,\r\n     * caseInsensitive: false\r\n     * });\r\n     */\r\n    constructor(options){\r\n        this.routes = [];\r\n        this.path =  this._requestPath();\r\n\r\n        //default options\r\n        let defOptions = {\r\n            caseInsensitive: true,\r\n            historyMode: false\r\n        };\r\n        let mergedOptions = {...defOptions, ...options};\r\n        for(let key in mergedOptions){\r\n            this[`_${key}`] = mergedOptions[key];\r\n        }\r\n        this._checkHistoryMode();\r\n        this.query = new QueryParams(null, this._historyMode);\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * The get method is used in assigning routes to your application\r\n     * @method\r\n     * @param {string} uri route to be matched\r\n     * @param {callback} callback a callback function to be invoked if the route has been matched.\r\n     * @param {object} [thisArg=undefined] an argument that represents ``this`` keyword in your callback function. If empty, you will get undefined\r\n     * if you try to use ``this`` keyword in your callback function.  \r\n     * You can't pass the SPARouter class as ``this`` argument as it will return undefined also. The SPARouter class is already provided in the callback function\r\n     * @example\r\n     * // using a callback function\r\n     * SPARouter.get(\"/some-page-name\", (req, router)=>{\r\n     *      console.log(this.argument); // outputs \"A stored argument from my callback function\" to the console\r\n     *      console.log(req.url); // outputs \"/some-page-name\" to the console\r\n     * }, {argument: \"A stored argument from my callback function\"}); // this ouputs \"a stored argument from my callback function\" to the console.\r\n     * \r\n     * // using a class method\r\n     * class SomeClass {\r\n     *      constructor(){\r\n     *          this.argument = \"A stored argument from my class\";\r\n     *      }\r\n     *      pageFunction(req, router){\r\n     *          console.log(this.argument); // outputs \"A stored argument from my class\" to the console\r\n     *          console.log(req.url); // outputs \"/some-page-name\" to the console\r\n     *      }\r\n     * }\r\n     * myClass = new SomeClass();\r\n     * SPARouter.get(\"/some-page-name\", myClass.pageFunc, myClass);\r\n     */\r\n    \r\n    /**\r\n     * Callback function passed in the ```SPARouter.get()``` method.\r\n     * @callback callback\r\n     * @param {request} request\r\n     * @param {router} router\r\n     */\r\n    get(uri, callback, thisArg){\r\n        if(!Utils.isSet(uri)) throw new ArgNotFound(\"uri\")\r\n        if(!Utils.isSet(callback)) throw new ArgNotFound(\"callback\");\r\n\r\n        if(!Utils.isString(uri)) throw new ArgTypeError(\"uri\", \"string\", uri);\r\n        if(!Utils.isFunction(callback)) throw new ArgTypeError(\"callback\", \"function\", callback);\r\n\r\n        thisArg = thisArg instanceof SPARouter ? undefined : thisArg;\r\n\r\n        let route = {\r\n            uri: null,\r\n            callback: null,\r\n            thisArg: thisArg,\r\n            parameters: null,\r\n            regExp: null,\r\n            name: null,\r\n            current: false\r\n        }\r\n\r\n        if(this._caseInsensitive) {\r\n            uri = uri.toLowerCase()\r\n        };\r\n        uri = uri.startsWith(\"/\") ? uri : `/${uri}`;\r\n        this.routes.forEach(route=>{\r\n            if(route.uri === uri) throw new Error(`Conflicting routes. The route uri ${route.uri} already exists`);\r\n        });\r\n\r\n        route.uri = uri;\r\n        route.callback = callback;\r\n        route.parameters = this._proccessParameters(route.uri);\r\n\r\n        this.routes.push(route);\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * @method\r\n     * Match the uri route where a parameter name matches a regular expression. This method must be chained to the\r\n     * ``SPARouter.get()`` method.\r\n     * @param {string} name parameter name to match\r\n     * @param {string} regExp regular expression pattern but must be in string format, without front slashes that converts\r\n     * it to a regExp object. E.g \"0-9\", \"[A-Z]\". See example below  \r\n     * Special characters which you wish to escape with the backslash must be double escaped. E.g \"\\\\\\w\" instead of \"\\w\";\r\n     * @example\r\n     * router.get(\"/{page-name}/{id}\",function(req, router){\r\n     * //do something with this route\r\n     * \r\n     * \r\n     * }).where(\"page-name\",\"user\").where(\"id\",\"[0-9]+\");\r\n     * //this route will match my-site.com/user/10, my-site.com/user/15\r\n     * // it won't match my-site.com/admin/10, my-site.com/user/login\r\n     */\r\n    where(name, regExp){\r\n        \r\n        //validate type\r\n        if(!Utils.isSet(name)) throw new ArgNotFound(\"name\");\r\n        if(!Utils.isSet(regExp)) throw new ArgNotFound(\"regExp\");\r\n        if(!Utils.isString(name)) throw new ArgTypeError(\"name\", \"string\", name);\r\n        if(!Utils.isString(regExp)) throw new ArgTypeError(\"regExp\", \"string\", regExp);\r\n\r\n        let route = this.routes[this.routes.length - 1]; // the target route\r\n        \r\n        //if paramaters exists for this route\r\n        if (route.parameters.length === 0) throw new Error(`No Parameters Found: Could not set paramater regExpression for [${route.uri}] because the route has no parameters`);\r\n        \r\n        regExp = regExp.replace(/\\(/g,\"\\\\(\");\r\n        regExp = regExp.replace(/\\)/g,\"\\\\)\");\r\n\r\n        regExp = `(${regExp}+)`;\r\n\r\n        let parameterFound = false;\r\n        route.parameters.forEach((parameter, index)=>{\r\n            if(parameter[name] !== undefined){\r\n                parameterFound = true;\r\n                parameter[name].regExp = regExp;\r\n            }\r\n        });\r\n \r\n        if(!parameterFound) throw new Error(`Invalid Parameter: Could not set paramater regExpression for [${route.uri}] because the parameter [${name}] does not exist`);\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * SPARouter supports named routes. This methods sets the name of a route and can be referrenced using the\r\n     * `router.pathFor(name)` inside your callback function in `SPARouter.get()` method.  \r\n     * This method must be chained to the `SPARouter.get()` method.\r\n     * @method\r\n     * @param {string} name route name\r\n     * @example\r\n     * router = new SPARouter(options)\r\n     * router.get(\"/user/login\", function(req, router){\r\n     * // some functions here\r\n     * \r\n     * \r\n     * }).setName(\"user-login\");\r\n     * \r\n     * router.get(\"/user/home\", function(req, router){\r\n     * console.log(router.pathFor(\"user-home\")) // outputs: /user/home\r\n     * console.log(router.pathFor(\"user-login\")) // outputs: /user/login\r\n     * \r\n     * }).setName(\"user-home\")\r\n     */\r\n    setName(name){\r\n        if(!Utils.isSet(name)) throw new ArgNotFound(\"name\");\r\n        if(!Utils.isString(name)) throw new ArgTypeError(\"name\", \"string\", name);\r\n\r\n        let targetRoute = this.routes[this.routes.length - 1];\r\n        this.routes.forEach((route)=>{\r\n            if(route.name === name) throw new Error(`Duplicate naming. A route with name ${name} already exists`);\r\n        })\r\n        targetRoute.name = name;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Initialize the Router.  \r\n     * Call this method after setting up all route paths.\r\n     * @method\r\n     * @example\r\n     * const router = new SPARouter(myOptions);\r\n     * router.get(\"/\", homeCallback);\r\n     * router.get(\"/about\", aboutCallback).setName(\"about\");\r\n     * router.get(\"/contact\", contactCallback).setName(\"contact\");\r\n     * router.notFoundHandler(myNotFoundHandler);\r\n     * router.init();\r\n     */\r\n    init(){\r\n        this.routes.forEach((route)=>{\r\n            this._proccessRegExp(route);\r\n        }, this);\r\n\r\n        let found = false;\r\n        let routerObj = {\r\n            pathFor: (name, parameter)=>{\r\n                return this._pathFor(name, parameter);\r\n            },\r\n\r\n            goTo: (url, data, title)=>{\r\n                return this._goTo(url, data, title);\r\n            },\r\n\r\n            historyMode: this._historyMode\r\n        };\r\n        this.routes.some((route)=>{\r\n            if(this._requestPath().match(route.regExp)) {\r\n                route.current = true;\r\n                found = true;\r\n\r\n                let request = {};\r\n                request.param = this._processRequestParameters(route);\r\n                request.query = this.query;\r\n                request.uri = window.location.pathname;\r\n\r\n                return route.callback.call(route.thisArg, request, routerObj);\r\n            }\r\n        },this)\r\n\r\n        if(!found){\r\n            if(!this._notFoundFunction) return;\r\n            let request = {};\r\n            request.uri = window.location.pathname;\r\n            return this._notFoundFunction(request, routerObj);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * A callback handler to execute if no route is matched.\r\n     * @method\r\n     * @param {function} callback Callback function\r\n     * @example\r\n     * router.notFoundHandler(function(){\r\n     * console.log(\"page not found\");\r\n     * // or redirect to the 404 page\r\n     * // or do anything you want!\r\n     * });\r\n     */\r\n    notFoundHandler(callback){\r\n        if(!Utils.isSet(callback)) throw new ArgNotFound(\"callback\");\r\n        if(!Utils.isFunction(callback)) throw new ArgTypeError(\"callback\", \"function\", callback);\r\n\r\n        this._notFoundFunction = callback;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Redirect one url to another\r\n     * @method\r\n     * @private\r\n     * @todo create api for redirecting routes\r\n     */\r\n    redirect(oldUrl, newUrl){\r\n        /*if(this._caseInsensitive){\r\n            oldUrl = oldUrl.toLowerCase();\r\n            newUrl = newUrl.toLowerCase();\r\n        }\r\n\r\n        if(oldUrl === newUrl) throw new Error(\"Redirect loop found as both urls are the same\");\r\n\r\n        if(typeof oldUrl === \"string\"){\r\n            this._getParameters(oldUrl, (params, newRoute)=>{\r\n                oldUrl = newRoute;\r\n            });\r\n        }\r\n\r\n        if (this._requestPath().match(`${oldUrl}$`)){\r\n            return window.location.href= newUrl;\r\n        }*/\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Route grouping\r\n     * @method\r\n     * @todo create api for grouping routes\r\n     * @private\r\n     */\r\n    group(){\r\n\r\n    }\r\n\r\n    _goTo(url, data = {}, title =\"\"){\r\n        if(!Utils.isSet(url)) throw new ArgNotFound(\"url\");\r\n        if(!Utils.isString(url)) throw new ArgTypeError(\"url\", \"string\", url);\r\n        if(Utils.isEmpty(url)) throw new TypeError(\"url cannot be empty\");\r\n\r\n        if(!this._historyMode){\r\n            let storage = window.localStorage;\r\n            storage.setItem(\"pushState\", data);\r\n            return window.location.href= url;\r\n        }\r\n\r\n        window.history.pushState(data, title, url);\r\n        return this.init();\r\n    }\r\n\r\n    _pathFor(name, parameters = {}){\r\n        if(!Utils.isSet(name)) throw new ArgNotFound(\"name\");\r\n        if(!Utils.isString(name)) throw new ArgTypeError(\"name\", \"string\", string);\r\n        if(Utils.isEmpty(name)) throw new TypeError(\"name cannot be empty\");\r\n        let nameFound = false;\r\n        let uri;\r\n        this.routes.some(route=>{\r\n            if(route.name === name){\r\n                nameFound = true;\r\n                uri = route.uri;\r\n                if(this._containsParameter(uri)){\r\n                    \r\n                    if(!Utils.isSet(paramaters)) throw new ArgNotFound(\"parameters\");\r\n                    if(!Utils.isObject(parameters)) throw new ArgTypeError(\"parameters\", \"object\", parameters);\r\n                    if(Utils.isEmpty(parameters)) throw new TypeError(\"parameters cannot be empty\");\r\n                    let array  = [];\r\n                    for(let value of route.uri.match(/\\{(\\w+)\\}/g)){\r\n                        value = value.replace(\"{\",\"\");\r\n                        value = value.replace(\"}\",\"\");\r\n                        array.push(value);\r\n                    }\r\n                    if(array.length !== Object.getOwnPropertyNames(parameters).length) throw new Error(`The route with name [${name}] contains ${array.length} parameters. ${Object.getOwnPropertyNames(parameters).length} given`)\r\n                    for(let parameter in parameters){\r\n                        if (!array.includes(parameter)) throw new Error(`Invalid parameter name [${parameter}]`);\r\n                        let r = new RegExp(`{${parameter}}`,\"g\");\r\n                        uri = uri.replace(r, parameters[parameter]);\r\n                    }\r\n                }\r\n            }\r\n        });\r\n        if (!nameFound) throw new Error(`Invalid route name [${name}]`);\r\n        return uri;\r\n    }\r\n\r\n    _proccessParameters(uri){\r\n        let parameters = [];\r\n        let sn = 0;\r\n\r\n        if(this._containsParameter(uri)){\r\n            uri.replace(/\\{\\w+\\}/g,(parameter)=>{\r\n                sn++;\r\n                parameter.replace(/\\w+/, (parameterName)=>{\r\n                    let obj = {};\r\n                    obj[parameterName] = {\r\n                        sn: sn,\r\n                        regExp: \"([^\\\\/]+)\", // catch any word except '/' forward slash\r\n                        value: null\r\n                    }\r\n                    parameters.push(obj);\r\n                });\r\n            });\r\n        }\r\n        \r\n        return parameters;\r\n    }\r\n\r\n    _proccessRegExp(route){\r\n        let regExp = route.uri;\r\n\r\n        // escape special characters\r\n        regExp = regExp.replace(/\\//g, \"\\\\/\");\r\n        regExp = regExp.replace(/\\./g, \"\\\\.\");\r\n        regExp = regExp.replace(\"/\", \"/?\");\r\n\r\n        if(this._containsParameter(route.uri)){\r\n\r\n            //replace uri parameters with their regular expression\r\n            regExp.replace(/{\\w+}/g, (parameter)=>{\r\n                let parameterName = parameter.replace(\"{\",\"\");\r\n                parameterName = parameterName.replace(\"}\",\"\");\r\n                route.parameters.some((i)=>{\r\n                    if(i[parameterName] !== undefined) {\r\n                        regExp = regExp.replace(parameter, i[parameterName].regExp)\r\n                        return regExp;\r\n                    }\r\n                });\r\n                return parameter;\r\n            });\r\n        }\r\n        regExp = `^${regExp}$`;\r\n        route.regExp = new RegExp(regExp);\r\n        return route;\r\n    }\r\n\r\n    _containsParameter(uri){\r\n        return uri.search(/{\\w+}/g) >= 0;\r\n    }\r\n\r\n    _processRequestParameters(route){\r\n        let routeMatched = this._requestPath().match(route.regExp);\r\n        if (!routeMatched) return;\r\n        let param = {};\r\n        routeMatched.forEach((value, index)=>{\r\n            if(index !== 0){\r\n                let key = Object.getOwnPropertyNames(route.parameters[index - 1]);\r\n                param[key] = value;\r\n            }\r\n        });\r\n        return param;\r\n    }\r\n\r\n    _requestPath(){\r\n        return window.location.pathname;\r\n    }\r\n\r\n    _checkHistoryMode(){\r\n        if(!this._historyMode) return;\r\n\r\n        if(!window.PopStateEvent && !\"pushState\" in history) return; // check for support of popstate event and pushstate in browser\r\n\r\n        window.addEventListener(\"popstate\", (e)=>{\r\n            this.init();\r\n        });\r\n\r\n        return this;\r\n    }\r\n    \r\n     /**\r\n      * The request object is passed as a callback parameter\r\n      * @typedef {Object} request\r\n      * @property {Object} param an object of parameters and their value.\r\n      * @property {string} uri the current request uri\r\n      */\r\n\r\n     /**\r\n      * The router object is also passed as a callback parameter\r\n      * @typedef {Object} router\r\n      * @property {pathFor} pathFor\r\n      * @property {goTo} goTo\r\n      * @property {boolean} historyMode check if history mode is set\r\n      */\r\n    \r\n    /**\r\n     * Returns the uri path for a named route.  \r\n     * If the route has parameters, an object of the parameter name as ``key`` and parameter value as ``value`` should be passed as second argument.\r\n     * @typedef {function} pathFor\r\n     * @memberof router\r\n     * @param {string} name The name of the route\r\n     * @param {Object} [parameter] An object of keys and values containing the parameters of the route and its corresponding value.\r\n     * @returns {string} uri\r\n     * @example\r\n     * var router = new SPARouter(options);\r\n     * router.get(\"/blog/{slug}\", function(req, router){\r\n     * console.log(router.pathFor(\"blog-post\", { slug: \"hello-world\"})) //outputs: /blog/hello-world\r\n     * }).setName(\"blog-post\");\r\n     */\r\n\r\n    /**\r\n     * Use this method if you would like to **go to** or **redirect** to a link.  \r\n     * This method uses window.location.href parsing the url param as the href.  \r\n     * If the historyMode method is set to true, it utilizes the history.pushState() passing\r\n     * the params and reinitializing the router.\r\n     * @typedef {function} goTo\r\n     * @memberof router\r\n     * @param {string} url The url you wish to goto. An absolute url is also acceptable so long it's of the same origin.\r\n     * @param {Object} [data={}] an object of data for HTML history.pushState()\r\n     * @param {string} [title=\"\"] title for HTML history.pushState()\r\n     */\r\n}\r\nexport default SPARouter;","class Utils {\r\n    isString(variable){\r\n        return Object.prototype.toString.call(variable) === \"[object String]\";\r\n    }\r\n    \r\n    isNumber(variable){\r\n        return Object.prototype.toString.call(variable) === \"[object Number]\";\r\n    }\r\n\r\n    isRegExp(variable){\r\n        return Object.prototype.toString.call(variable) === \"[object RegExp]\";\r\n    }\r\n    \r\n    isArray(variable){\r\n        return Object.prototype.toString.call(variable) === \"[object Array]\";\r\n    }\r\n    \r\n    isObject(variable){\r\n        return Object.prototype.toString.call(variable) === \"[object Object]\";\r\n    }\r\n\r\n    isFunction(variable){\r\n        return Object.prototype.toString.call(variable) === \"[object Function]\";\r\n    }\r\n    \r\n    isBoolean(variable){\r\n        return Object.prototype.toString.call(variable) === \"[object Boolean]\";\r\n    }\r\n    \r\n    isNull(variable){\r\n        return Object.prototype.toString.call(variable) === \"[object Null]\";\r\n    }\r\n    \r\n    isUndefined(variable){\r\n        return Object.prototype.toString.call(variable) === \"[object Undefined]\";\r\n    }\r\n\r\n    isEmpty (variable){\r\n        return this.isUndefined(variable) || this.isNull(variable) || variable === 0 || variable === false || ((this.isString(variable) || this.isArray(variable)) && variable.length === 0) || (this.isObject(variable) && Object.getOwnPropertyNames(variable).length === 0);\r\n    }\r\n\r\n    isSet(variable){\r\n        return !this.isUndefined(variable) && !this.isNull(variable);\r\n    }\r\n}\r\nUtils = new Utils();\r\n\r\nexport function ArgumentNotFoundError(argName){\r\n    let name = \"ArgumentNotFoundError\";\r\n    let message = Utils.isSet(argName) ? `${argName} argument is required. None found` : \"Required argument was not found\";\r\n\tlet instance = new Error(message);\r\n\tinstance.name = name;\r\n\tinstance.message = message;\r\n\tinstance.toString = function(){\r\n        return instace.message;\r\n    };\r\n\tObject.setPrototypeOf(instance, Object.getPrototypeOf(this));\r\n\tif (Error.captureStackTrace){\r\n\t\tError.captureStackTrace(instance, ArgumentNotFoundError);\r\n\t}\r\n\treturn instance;\r\n}\r\n\r\nexport function ArgumentTypeError(argName, argType, argValue){\r\n    argType = Utils.isSet(argType) ? argType.toString() : typeof argType;\r\n    let name = \"ArgumentTypeError\";\r\n    let message = Utils.isSet(argName) ? `typeof ${argName.toString()} argument must be equal to ${argType}. ${typeof argValue} found.` : \"Invalid argument type found\";\r\n    let instance = new Error(message);\r\n\tinstance.name = name;\r\n\tinstance.message = message;\r\n\tinstance.toString = function(){\r\n        return this.message;\r\n    };\r\n\tObject.setPrototypeOf(instance, Object.getPrototypeOf(this));\r\n\tif (Error.captureStackTrace){\r\n\t\tError.captureStackTrace(instance, ArgumentTypeError);\r\n\t}\r\n\treturn instance;\r\n}\r\n\r\nArgumentNotFoundError.prototype = Object.create(Error.prototype, {\r\n\tconstructor: {\r\n\t\tvalue: Error,\r\n\t\tenumerable: false,\r\n\t\twritable: true,\r\n\t\tconfigurable: true\r\n\t}\r\n});\r\n\r\nArgumentTypeError.prototype = Object.create(Error.prototype, {\r\n\tconstructor: {\r\n\t\tvalue: Error,\r\n\t\tenumerable: false,\r\n\t\twritable: true,\r\n\t\tconfigurable: true\r\n\t}\r\n});\r\n\r\nif (Object.setPrototypeOf){\r\n\tObject.setPrototypeOf(ArgumentNotFoundError, Error);\r\n\tObject.setPrototypeOf(ArgumentTypeError, Error);\r\n} else {\r\n\tArgumentNotFoundError.__proto__ = Error;\r\n\tArgumentTypeError.__proto__ = Error;\r\n}\r\n\r\n// QueryParams class constants\r\n\r\n\r\nvar KEYS = [];\r\nvar QUERIES = [];\r\nvar QUERY_STRING = \"\";\r\nvar HISTORY_MODE;\r\n\r\nconst DECODE = value=>{\r\n    return decodeURIComponent(value);\r\n}\r\nconst DECODE_KEY = key=>{\r\n    return decodeURIComponent(key.split(' ').join(''));\r\n}\r\nconst GET_PARAM = (key, index = null) =>{\r\n    let param = null;\r\n    if(index){\r\n        param = QUERIES[index][key];\r\n    } else {\r\n        QUERIES.some(query=>{\r\n            if(query.hasOwnProperty(key)) return param = query[key];\r\n        });\r\n    }\r\n    return param;\r\n}\r\n\r\nclass QueryParams {\r\n    constructor(url = null, historyMode = false){\r\n        QUERY_STRING = url ? url : window.location.search;\r\n        HISTORY_MODE = window.PopStateEvent && \"pushState\" in window.history ? historyMode : false;\r\n        if(HISTORY_MODE){\r\n            window.addEventListener(\"popstate\", (e)=>{\r\n                let event = e.currentTarget;\r\n                QUERY_STRING = event.location.search;\r\n                KEYS = [];\r\n                QUERIES = [];\r\n                return this.init(); // re run this class again\r\n            });\r\n        };\r\n        this.init();\r\n    }\r\n\r\n    init(){\r\n        if (QUERY_STRING) {\r\n            let queryArray = QUERY_STRING.slice(1).split(\"&\");\r\n            queryArray.forEach(query=>{\r\n                query = query.split('=');\r\n                KEYS.push(DECODE_KEY(query[0]));\r\n                let obj = {};\r\n                obj[DECODE_KEY(query[0])] = query.length > 1 ? DECODE(query[1]) : true; // return true if search query has no value\r\n                QUERIES.push(obj);\r\n            }, this);\r\n        }\r\n    }\r\n\r\n    keys(){\r\n        return KEYS;\r\n    }\r\n\r\n    has(key){\r\n        key = DECODE_KEY(key);\r\n        return KEYS.length > 0 && GET_PARAM(key) ? true : false;\r\n    }\r\n\r\n    get(key){\r\n        key = DECODE_KEY(key);\r\n        return this.has(key) ? GET_PARAM(key) : null;\r\n    }\r\n    \r\n    getAll(key) {\r\n        key = DECODE_KEY(key);\r\n        return this.has(key) ? GET_PARAM(key).split(',') : [];\r\n    }\r\n\r\n    toString (){\r\n        let string = \"\";\r\n        if(QUERY_STRING){\r\n            string = \"?\";\r\n            KEYS.forEach((key, index)=>{\r\n                let value = GET_PARAM(key, index) === true ? '' : `=${GET_PARAM(key, index)}`;\r\n                let newString = index === 0 ? key + value : `&${key + value}`;\r\n                string += newString;\r\n            });\r\n        }\r\n        return string;\r\n    }\r\n\r\n    append(key, value){\r\n        if(!Utils.isSet(key)) throw new ArgNotFound(\"key\");\r\n        key = DECODE_KEY(key);\r\n        value = Utils.isSet(value) ? DECODE(value) : true;\r\n\r\n        let index = KEYS.push(key) - 1;\r\n        QUERIES[index] = {\r\n            [key]: value\r\n        }\r\n        QUERY_STRING = QUERY_STRING ? this.toString() : true;\r\n        if(HISTORY_MODE){\r\n            window.history.pushState('', '', this.toString());\r\n        }\r\n        return GET_PARAM(key, index);\r\n    }\r\n\r\n    set(key, value){\r\n        if(!Utils.isSet(key)) throw new ArgNotFound(\"key\");\r\n        key = DECODE_KEY(key);\r\n        value = Utils.isSet(value) ? DECODE(value) : true;\r\n        QUERY_STRING = QUERY_STRING ? QUERY_STRING : true;\r\n        let index = KEYS.indexOf(key);\r\n        if(index !== -1) {\r\n            KEYS[index] = key; // replace the key if it exists else append new key\r\n            QUERIES[index] = {\r\n                [key]: value\r\n            }\r\n        } else {\r\n            index = KEYS.push(key) - 1;\r\n            QUERIES[index] = {\r\n                [key]: value\r\n            }\r\n        }\r\n        \r\n        QUERY_STRING = QUERY_STRING ? this.toString() : true;\r\n        if(HISTORY_MODE){\r\n            window.history.pushState('', '', this.toString());\r\n        }\r\n        return GET_PARAM(key, index);\r\n    }\r\n\r\n    delete(key){\r\n        if(!Utils.isSet(key)) throw new ArgNotFound(\"key\");\r\n        key = DECODE_KEY(key);\r\n        if(!this.has(key)) return this.has(key); // definitely returns false if key doesn't exist\r\n\r\n        let index = KEYS.indexOf(key);\r\n        let value = QUERIES[index][key];\r\n        KEYS.splice(index, 1);\r\n        QUERIES.splice(index, 1);\r\n\r\n        QUERY_STRING = QUERY_STRING ? this.toString() : true;\r\n        if(HISTORY_MODE){\r\n            window.history.pushState('', '', this.toString());\r\n        }\r\n        return value;\r\n    }\r\n\r\n}\r\n\r\nexport {Utils, QueryParams};"],"sourceRoot":""}